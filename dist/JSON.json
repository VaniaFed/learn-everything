{"deck":{"id":"03baf318-891f-4dae-8cb5-37702828c5e7","title":"JSON"},"cards":[{"id":"6eefc3e5-6199-46b1-9f0f-5a098993d0b1","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7","answer":"JavaScript Object Notation","question":"Расшифровка аббревиатуры"},{"id":"c25782b4-f5a3-410f-9fae-3964886956b3","question":"Описание, предназначение","answer":"Это один из наиболее удобных форматов данных при взаимодействии с JavaScript. Если нужно с сервера взять объект с данными и передать его клиенту, то в качестве промежуточного формата – для передачи по сети, почти всегда используют именно его.","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"1743db04-b527-4ace-bb7b-72714aa94490","question":"Что представляют собой данные в формате JSON?","answer":"JavaScript-объекты { ... } \nили Массивы [ ... ]\nили Значения одного из типов: строки в двойных кавычках, число, логическое значение true/false, null.","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"8ef848e6-0d67-4b03-8a0a-33714063598f","question":"В каких языках программирования можно использовать JSON?","answer":"Почти все языки программирования имеют библиотеки для преобразования объектов в формат JSON.","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"0c117af3-5af4-431e-9118-31876cdfc8cd","question":"Основные методы для работы с JSON в JavaScript","answer":"JSON.parse и JSON.stringify","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"4a4c2013-8d9e-4042-8d69-c8464346abf5","question":"Что делает JSON.parse?","answer":"Читает объекты из строки в формате JSON","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"141be823-4114-40d5-ac0c-fba73db04802","question":"Что делает JSON.stringify?","answer":"Превращает объекты в строку в формате JSON, используется, когда нужно из JavaScript передать данные по сети.","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"1ded5671-2b5e-413f-a8a4-47f24961320c","question":"Эквиавлентны ли JSON-объекты JavaScript-объектам?","answer":"Нет. Объекты в формате JSON похожи на обычные JavaScript-объекты, но отличаются от них более строгими требованиями к строкам – они должны быть именно в двойных кавычках. Кроме того, в формате JSON не поддерживаются комментарии. Он предназначен только для передачи данных.","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"481c96df-6913-4ab9-97e8-ecfc70ac3fee","question":"Как преобразовать следующий объект в JSON? \nconst event = {\n    title: 'Конференция',\n    date: 'сегодня'\n }","answer":"const res = JSON.stringify(event)","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"e290a63f-4c28-4152-aa56-806005cf520b","question":"Преобразовать из JSON-строки в JavaScript-объект закодированный в предыдущем примере объект","answer":"const extractedJSON = JSON.parse(res)","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.07","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"c671896e-00d7-4f0e-ae7b-1f2bf5bb1f4a","question":"Методы для работы с JSON в PHP","answer":"json_decode и json_encode","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"b9d82625-08c4-4c80-b2f2-e1e732f1ef26","question":"Что делает json_decode?","answer":"Декодирует строку JSON","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"94914421-2b1b-4732-b9c1-269f8151e4de","question":"Декодируйте следующую JSON-строку $json = '{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}';","answer":"$result = json_decode($json);","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"161a854d-94db-484a-a256-b89626e1d4aa","question":"Что делает json_encode?","answer":"Возвращает JSON-представление данных","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"4e885d5b-173e-4b55-b665-307ce8119c42","question":"Закодируйте следущюий ассоциативный массив в JSON-строку и отправьте клиенту (для отправки необходимо просто вывести при помощи echo): \n$arr = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);","answer":"echo json_encode($arr);","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"aa81a6e3-bc8b-4a16-a865-c8110f84e984","question":"Отправить запрос на сервер с данными, закодированными в JSON. Из JS.\nОтправить на данные сервер и получить ответ\nЭто что-то типа калькулятора\nСервер получит данные и вернет ответ. Этот ответ нужно будет вывести \nДанные:\nconst calcData = {\n  num1: 10,\n  num2: 2,\n  operator: '+'\n}\n","answer":"const calcData = {\n  num1: 10,\n  num2: 2,\n  operator: '+'\n}\n\nconst xhr = new XMLHttpRequest()\nconst url = 'handler.php'\nxhr.open('POST', url, true)\nxhr.setRequestHeader('Content-Type', 'application/json')\nxhr.onreadystatechange = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n        var result = JSON.parse(xhr.responseText)\n        console.log(result.resultNumber)\n    }\n};\nconst data = JSON.stringify(calcData)\nxhr.send(data)\n","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"},{"id":"bc7031c2-5803-4861-968f-7c9b217e00b1","question":"Теперь примем эти данные на стороне сервера. Допустим, мы пишем на PHP.","answer":"Не реализовано","datePrevRevise":"2019.05.06","dateNextRevise":"2019.05.06","deckId":"03baf318-891f-4dae-8cb5-37702828c5e7"}]}